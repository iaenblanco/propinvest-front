---
export interface Props {
  text: string;
  href: string;
  variant?: 'primary' | 'secondary' | 'outline' | 'gradient';
  size?: 'small' | 'medium' | 'large';
  icon?: string;
  iconSvg?: string;
  className?: string;
}

const { 
  text, 
  href, 
  variant = 'primary', 
  size = 'large',
  icon,
  iconSvg,
  className = ''
} = Astro.props;

const sizeClasses = {
  small: 'cta-small',
  medium: 'cta-medium', 
  large: 'cta-large'
};

const variantClasses = {
  primary: 'cta-primary',
  secondary: 'cta-secondary',
  outline: 'cta-outline',
  gradient: 'cta-gradient'
};
---

<a 
  href={href} 
  class={`cta-modular ${variantClasses[variant]} ${sizeClasses[size]} ${className}`}
>
  {iconSvg && <span class="cta-icon" set:html={iconSvg}></span>}
  {icon && !iconSvg && <span class="cta-icon">{icon}</span>}
  <span class="cta-text">{text}</span>
</a>

<style>
  .cta-modular {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
    text-decoration: none;
    font-weight: 600;
    font-family: var(--font-primary);
    border-radius: 12px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
    cursor: pointer;
    border: 2px solid transparent;
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
  }

  .cta-modular::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s ease;
  }

  .cta-modular:hover::before {
    left: 100%;
  }

  .cta-modular:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }

  .cta-icon {
    font-size: 1.1em;
    display: flex;
    align-items: center;
  }

  .cta-text {
    font-weight: 600;
    letter-spacing: 0.5px;
  }

  /* Variantes */
  .cta-primary {
    background: linear-gradient(135deg, #000000 0%, #2c2c2c 100%);
    color: white;
    border-color: #000000;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
  }

  .cta-primary:hover {
    background: linear-gradient(135deg, #2c2c2c 0%, #000000 100%);
    border-color: #000000;
    color: white;
  }

  .cta-secondary {
    background: linear-gradient(135deg, #8c6b3b 0%, #a67c52 100%);
    color: white;
    border-color: #8c6b3b;
    box-shadow: 0 4px 15px rgba(140, 107, 59, 0.3);
  }

  .cta-secondary:hover {
    background: linear-gradient(135deg, #a67c52 0%, #8c6b3b 100%);
    border-color: #8c6b3b;
    color: white;
  }

  .cta-outline {
    background: rgba(255, 255, 255, 0.95);
    color: #000000;
    border-color: #000000;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  }

  .cta-outline:hover {
    background: rgba(255, 255, 255, 1);
    border-color: #000000;
    color: #000000;
  }

  .cta-gradient {
    background: linear-gradient(135deg, #000000 0%, #8c6b3b 50%, #000000 100%);
    color: white;
    border-color: #8c6b3b;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.25);
  }

  .cta-gradient:hover {
    background: linear-gradient(135deg, #8c6b3b 0%, #000000 50%, #8c6b3b 100%);
    border-color: #8c6b3b;
    color: white;
  }

  /* Tama√±os */
  .cta-small {
    padding: 0.75rem 1.5rem;
    font-size: 0.9rem;
  }

  .cta-medium {
    padding: 1rem 2rem;
    font-size: 1rem;
  }

  .cta-large {
    padding: 1.25rem 2.5rem;
    font-size: 1.1rem;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .cta-modular {
      width: 100%;
      justify-content: center;
    }
    
    .cta-large {
      padding: 1rem 2rem;
      font-size: 1rem;
    }
  }
</style> 
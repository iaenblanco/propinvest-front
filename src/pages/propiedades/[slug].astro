---
// Importamos el Layout principal para encapsular la página
import Layout from '../../layouts/Layout.astro';
import CTAButton from '../../components/CTAButton.astro';
import CTABanner from '../../components/CTABanner.astro';

// 1. getStaticPaths: Fetch de datos y definición de rutas (sin cambios)
export async function getStaticPaths() {
  const response = await fetch('https://truthful-rhythm-e8bcafa766.strapiapp.com/api/propiedads?populate=*');
  const json = await response.json();
  const properties = json.data;

  const validProperties = properties.filter(prop => prop && prop.Slug);

  return validProperties.map(prop => {
    return {
      params: { slug: prop.Slug },
      props: { propiedad: prop },
    };
  });
}

// 2. Lógica del Componente (Frontmatter)
const { propiedad } = Astro.props;

// Extracción de constantes
const {
  Titulo,
  Ubicacion,
  Precio,
  Dormitorios,
  Banos,
  Superficie,
  M2utiles,
  Descripcion,
  Region,
  Tipo,
  Objetivo,
  Gastos_comunes,
  Contribuciones,
  suites,
  Servicio,
  Estacionamientos,
  Terrazas,
  Bodega,
  Piscina,
  Quincho,
  sala_multiuso,
  Gimnasio,
  Lavanderia,
  Walk_in_closet,
  ano_construccion,
  Piso,
  Orientacion,
  Slug
} = propiedad;

// --- Lógica replicada de api.js ---

const formatearPrecio = (precio) => {
  if (!precio) return 'UF 0';
  return `UF ${precio.toLocaleString('es-CL')}`;
};

const formatearPrecioCLP = (precio) => {
  const formatted = new Intl.NumberFormat('es-CL', {
    style: 'currency',
    currency: 'CLP',
    minimumFractionDigits: 0,
    maximumFractionDigits: 0
  }).format(precio);
  return formatted.replace(/^\$/, 'CLP $');
};

let tasaUF = 37000;
let precioCLP = '';
try {
  const ufResponse = await fetch('https://mindicador.cl/api/uf');
  const ufData = await ufResponse.json();
  if (ufData?.serie?.[0]) {
    tasaUF = ufData.serie[0].valor;
  }
} catch (error) {
  console.error('Error al obtener tasa UF:', error);
}
if (Precio) {
  precioCLP = formatearPrecioCLP(Precio * tasaUF);
}
const precioUF = formatearPrecio(Precio);

const getTodasImagenes = (prop) => {
    if (!prop.Imagenes || !Array.isArray(prop.Imagenes) || prop.Imagenes.length === 0) {
        return ['/assets/images/propiedad-default.jpg'];
    }
    return prop.Imagenes.map(imagen =>
        imagen?.url ? (imagen.url.startsWith('http') ? imagen.url : `https://truthful-rhythm-e8bcafa766.strapiapp.com${imagen.url}`) : '/assets/images/propiedad-default.jpg'
    );
};

const getPrimeraImagen = (prop) => {
    if (!prop.Imagenes || !Array.isArray(prop.Imagenes) || prop.Imagenes.length === 0) {
        return '/assets/images/propiedad-default.jpg';
    }
    const primeraImagen = prop.Imagenes[0];
    return primeraImagen?.url ? (primeraImagen.url.startsWith('http') ? primeraImagen.url : `https://truthful-rhythm-e8bcafa766.strapiapp.com${primeraImagen.url}`) : '/assets/images/propiedad-default.jpg';
};

const imagenes = getTodasImagenes(propiedad);

let propiedadesSimilares = [];
try {
    const allPropsResponse = await fetch('https://truthful-rhythm-e8bcafa766.strapiapp.com/api/propiedads?populate=*');
    const allPropsJson = await allPropsResponse.json();
    const todasLasPropiedades = allPropsJson.data;

    let filtradas = todasLasPropiedades.filter(p => p.id !== propiedad.id && p.Objetivo === propiedad.Objetivo && p.Tipo === propiedad.Tipo);
    if (filtradas.length === 0) {
        filtradas = todasLasPropiedades.filter(p => p.id !== propiedad.id && p.Objetivo === propiedad.Objetivo);
    }
    if (filtradas.length === 0) {
        filtradas = todasLasPropiedades.filter(p => p.id !== propiedad.id && p.Destacado === true);
    }
    if (filtradas.length === 0) {
        filtradas = todasLasPropiedades.filter(p => p.id !== propiedad.id);
    }

    propiedadesSimilares = filtradas.sort((a, b) => (b.Destacado === true) - (a.Destacado === true)).slice(0, 3);
} catch (e) {
    console.error("Error fetching similar properties:", e);
}

const todasLasEspecificaciones = [
    { key: 'Dormitorios', label: 'Dormitorios', type: 'spec', icon: `<img src="/assets/icons/bed.svg" alt="Dormitorios" style="width:20px; height:20px;">` },
    { key: 'Banos', label: 'Baños', type: 'spec', icon: `<img src="/assets/icons/shower.svg" alt="Baños" style="width:20px; height:20px;">` },
    { key: 'Superficie', label: 'Mt2 Totales', type: 'spec', unit: ' m²', icon: `<img src="/assets/icons/mt2.svg" alt="Metros cuadrados" style="width:20px; height:20px;">` },
    { key: 'M2utiles', label: 'Mt2 Útiles', type: 'spec', unit: ' m²', icon: `<img src="/assets/icons/utiles.svg" alt="Metros cuadrados útiles" style="width:20px; height:20px;">` },
    { key: 'Estacionamientos', label: 'Estacionamientos', type: 'spec', icon: `<svg width='20' height='20' fill='none' stroke='#222' stroke-width='1.7' viewBox='0 0 24 24'><rect x='2' y='7' width='20' height='10' rx='2'/><circle cx='7' cy='17' r='2'/><circle cx='17' cy='17' r='2'/></svg>` },
    { key: 'Bodega', label: 'Bodega', type: 'spec', icon: `<svg width='20' height='20' fill='none' stroke='#222' stroke-width='1.7' viewBox='0 0 24 24'><rect x='3' y='3' width='18' height='18' rx='2'/><path d='M9 3v18'/></svg>` },
    { key: 'Gastos_comunes', label: 'GGCC', type: 'currency', icon: `<svg width='20' height='20' fill='none' stroke='#222' stroke-width='1.7' viewBox='0 0 24 24'><path d='M3 21h18M5 21V7l7-4 7 4v14'/><path d='M9 21v-8h6v8'/></svg>` },
    { key: 'Contribuciones', label: 'Contribuciones', type: 'currency', icon: `<svg width='20' height='20' fill='none' stroke='#222' stroke-width='1.7' viewBox='0 0 24 24'><path d='M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z'/><path d='M14 2v6h6M12 18h-1v-4h-1M16 18h-2'/></svg>` },
    { key: 'suites', label: 'Suites', type: 'spec', icon: `<svg width='20' height='20' fill='none' stroke='#222' stroke-width='1.7' viewBox='0 0 24 24'><circle cx='12' cy='8' r='4'/><path d='M2 20c0-4 8-6 10-6s10 2 10 6'/></svg>` },
    { key: 'Servicio', label: 'Servicio', type: 'spec', icon: `<svg width='20' height='20' fill='none' stroke='#222' stroke-width='1.7' viewBox='0 0 24 24'><rect x='4' y='4' width='16' height='16' rx='2'/><path d='M8 4v16'/></svg>` },
    { key: 'Terrazas', label: 'Terrazas', type: 'spec', icon: `<svg width='20' height='20' fill='none' stroke='#222' stroke-width='1.7' viewBox='0 0 24 24'><rect x='3' y='3' width='18' height='18' rx='2'/><path d='M3 12h18'/></svg>` },
    { key: 'Piscina', label: 'Piscina', type: 'feature', icon: `<svg width='20' height='20' fill='none' stroke='#222' stroke-width='1.7' viewBox='0 0 24 24'><path d='M2 17c2 0 2-2 4-2s2 2 4 2 2-2 4-2 2 2 4 2 2-2 4-2'/><path d='M2 21c2 0 2-2 4-2s2 2 4 2 2-2 4-2 2 2 4 2 2-2 4-2'/></svg>` },
    { key: 'Quincho', label: 'Quincho', type: 'feature', icon: `<svg width='20' height='20' fill='none' stroke='#222' stroke-width='1.7' viewBox='0 0 24 24'><rect x='3' y='10' width='18' height='8' rx='2'/><path d='M7 10V7a5 5 0 0 1 10 0v3'/></svg>` },
    { key: 'sala_multiuso', label: 'Sala Multiuso', type: 'feature', icon: `<svg width='20' height='20' fill='none' stroke='#222' stroke-width='1.7' viewBox='0 0 24 24'><rect x='4' y='4' width='16' height='16' rx='2'/><path d='M8 4v16'/></svg>` },
    { key: 'Gimnasio', label: 'Gimnasio', type: 'feature', icon: `<svg width='20' height='20' fill='none' stroke='#222' stroke-width='1.7' viewBox='0 0 24 24'><circle cx='12' cy='12' r='10'/><path d='M8 12h8'/></svg>` },
    { key: 'Lavanderia', label: 'Lavandería', type: 'feature', icon: `<svg width='20' height='20' fill='none' stroke='#222' stroke-width='1.7' viewBox='0 0 24 24'><rect x='3' y='3' width='18' height='18' rx='2'/><circle cx='12' cy='12' r='5'/></svg>` },
    { key: 'Walk_in_closet', label: 'Walk-in Closet', type: 'feature', icon: `<svg width='20' height='20' fill='none' stroke='#222' stroke-width='1.7' viewBox='0 0 24 24'><rect x='4' y='4' width='16' height='16' rx='2'/><path d='M8 4v16'/></svg>` },
    { key: 'ano_construccion', label: 'Año de construcción', type: 'spec', icon: `<svg width='20' height='20' fill='none' stroke='#222' stroke-width='1.7' viewBox='0 0 24 24'><rect x='3' y='3' width='18' height='18' rx='2'/><path d='M3 9h18'/></svg>` },
    { key: 'Piso', label: 'Piso', type: 'spec', icon: `<svg width='20' height='20' fill='none' stroke='#222' stroke-width='1.7' viewBox='0 0 24 24'><rect x='3' y='3' width='18' height='18' rx='2'/><path d='M3 12h18'/></svg>` },
    { key: 'Orientacion', label: 'Orientación', type: 'spec', icon: `<svg width='20' height='20' fill='none' stroke='#222' stroke-width='1.7' viewBox='0 0 24 24'><circle cx='12' cy='12' r='10'/><path d='M12 6v6l4 2'/></svg>` },
];

const whatsappLink = `https://wa.me/56974954413?text=Hola,%20quiero%20más%20información%20de%20esta%20propiedad:%20${encodeURIComponent(Titulo)}.%20Enlace:%20${encodeURIComponent(`https://propinvest.cl/propiedades/${Slug}`)}`;

const pageTitle = `${Titulo} | PropInvest`;
const pageDescription = propiedad.Descripcion || `Propiedad en ${Ubicacion}. ${Dormitorios} dormitorios, ${Banos} baños. Vive la exclusividad con PropInvest.`;
---
<Layout title={pageTitle} description={pageDescription}>
  <main>
    <section class="container" style="margin-top:3rem;">
        <div class="detalle-layout" style="display:flex; flex-wrap:wrap; gap:3rem; align-items:flex-start;">
            
            <div class="detalle-main" style="flex:2; min-width:320px;">
                <div class="property-gallery" id="gallery" style="width:100%; margin-top:0;">
                    {imagenes.length > 0 && (
                        <>
                            <div class="gallery-main" style="width:100%; max-width:772px; height:470px; max-height:70vw; min-width:220px; margin-left:auto; margin-right:auto; display:flex; align-items:center; justify-content:center; background:#f7f7f7; position:relative;">
                                <button class="carousel-arrow prev" aria-label="Imagen anterior" style="position:absolute; left:10px; top:50%; transform:translateY(-50%); z-index:2; background:rgba(255,255,255,0.7); border:none; border-radius:50%; width:40px; height:40px; display:flex; align-items:center; justify-content:center; cursor:pointer;">
                                    <svg width="20" height="20" viewBox="0 0 20 20" style="display:block; margin:auto; transform:rotate(180deg);" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <polyline points="7,5 13,10 7,15" stroke="#222" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    </svg>
                                </button>
                                <img src={imagenes[0]} alt={`${Titulo} - Imagen 1`} id="main-image" class="main-image" style="width:100%; height:470px; max-width:772px; max-height:70vw; min-width:220px; object-fit:cover; border-radius:14px; box-shadow:0 2px 8px var(--color-shadow); display:block; background:#f7f7f7; cursor:pointer;">
                                <button class="carousel-arrow next" aria-label="Siguiente imagen" style="position:absolute; right:10px; top:50%; transform:translateY(-50%); z-index:2; background:rgba(255,255,255,0.7); border:none; border-radius:50%; width:40px; height:40px; display:flex; align-items:center; justify-content:center; cursor:pointer;">
                                    <svg width="20" height="20" viewBox="0 0 20 20" style="display:block; margin:auto;" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <polyline points="7,5 13,10 7,15" stroke="#222" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    </svg>
                                </button>
                            </div>
                            <div class="gallery-thumbnails">
                                {imagenes.map((img, index) => (
                                    <img src={img} alt={`Thumbnail ${index + 1}`} class:list={["thumbnail", { active: index === 0 }]} data-index={index} />
                                ))}
                            </div>
                            <div class="lightbox-modal" id="lightbox-modal" style="display: none;">
                                <button class="lightbox-close" aria-label="Cerrar">×</button>
                                <img src="" alt="Imagen ampliada" id="lightbox-img">
                            </div>
                        </>
                    )}
                </div>
                 <div class="info-box-mobile" style="background:var(--color-background); border:1px solid var(--color-text-primary); border-radius:12px; box-shadow:0 2px 8px var(--color-shadow); padding:1.2rem; display:none; flex-direction:column; gap:1rem; margin-bottom:1.5rem;">
                    <div style="display:flex; justify-content:space-between; align-items:center; gap:1rem;">
                        {Tipo && Objetivo && <div class="property-type-mobile" style="font-size:0.8rem; color:var(--color-text-secondary); font-weight:500; text-transform:capitalize; flex-shrink:0;">{Tipo} en {Objetivo}</div>}
                        {Precio && <div class="price-uf-mobile" style="font-size:1.4rem; font-weight:700; color:var(--color-primary-accent); text-align:right; flex-shrink:0;">{precioUF}</div>}
                    </div>
                    <div style="display:flex; justify-content:space-between; align-items:center; gap:1rem;">
                        <h1 class="property-main-title-mobile" style="font-size:1.2rem; margin:0; line-height:1.2; color:var(--color-text-primary); font-weight:600; flex:1;">{Titulo}</h1>
                        {precioCLP && <div class="price-clp-mobile" style="font-size:0.9rem; color:var(--color-text-secondary); text-align:right; flex-shrink:0;">{precioCLP}</div>}
                    </div>
                    {Ubicacion && <div class="property-location-mobile" style="font-size:0.85rem; color:var(--color-text-secondary); flex:1;">📍 {Ubicacion}</div>}
                    <div class="property-key-features-mobile" style="display:grid; grid-template-columns:repeat(4, 1fr); gap:0.5rem; margin-top:0.5rem;">
                        {Dormitorios && <span class="feature-item-mobile" style="display:flex; flex-direction:column; align-items:center; gap:0.2rem; font-size:0.75rem; color:var(--color-text-primary); font-weight:500; text-align:center;">
                          <img src="/assets/icons/bed.svg" alt="Dormitorios" style="width:16px; height:16px;">
                          <span>{Dormitorios}</span>
                        </span>}
                        {Banos && <span class="feature-item-mobile" style="display:flex; flex-direction:column; align-items:center; gap:0.2rem; font-size:0.75rem; color:var(--color-text-primary); font-weight:500; text-align:center;">
                          <img src="/assets/icons/shower.svg" alt="Baños" style="width:16px; height:16px;">
                          <span>{Banos}</span>
                        </span>}
                        {Superficie && <span class="feature-item-mobile" style="display:flex; flex-direction:column; align-items:center; gap:0.2rem; font-size:0.75rem; color:var(--color-text-primary); font-weight:500; text-align:center;">
                          <img src="/assets/icons/mt2.svg" alt="Metros cuadrados" style="width:16px; height:16px;">
                          <span>{Superficie}m²</span>
                        </span>}
                        {M2utiles && <span class="feature-item-mobile" style="display:flex; flex-direction:column; align-items:center; gap:0.2rem; font-size:0.75rem; color:var(--color-text-primary); font-weight:500; text-align:center;">
                          <svg width="16" height="16" fill="none" stroke="#000000" stroke-width="1.5" viewBox="0 0 24 24" style="font-size:1rem;">
                            <rect x="3" y="3" width="18" height="18" rx="2"/>
                            <path d="M3 9h18"/>
                          </svg>
                          <span>{M2utiles}m²</span>
                        </span>}
                    </div>
                </div>
                <div class="technical-specs-section ficha-mobile" style="display:block; margin-top: 2rem;">
                    <h2 class="section-title">Características</h2>
                    <div class="specs-list-mobile" style="display: grid; grid-template-columns: 1fr; gap: 0.8rem 1.5rem;">
                        {todasLasEspecificaciones.map((item, index) => {
                            const valor = propiedad[item.key];
                            if (!valor && !(valor === true || valor === 'Sí') && item.type !== 'currency') return null;
                            let valorDisplay = '';
                            if (item.type === 'spec' && valor) { valorDisplay = `${valor}${item.unit || ''}`; } 
                            else if (item.type === 'feature' && (valor === true || valor === 'Sí')) { valorDisplay = 'Sí'; } 
                            else if (item.type === 'currency' && valor) { valorDisplay = formatearPrecioCLP(valor).replace('CLP ', ''); } 
                            else { return null; }
                            return (
                                <div class="spec-row-mobile" style="display:flex; align-items:center; gap:0.6rem; font-size:0.9rem; color:var(--color-text-primary);" data-index={index}>
                                    <span style='display:inline-flex; align-items:center; justify-content:center; width:32px; height:32px; background:#f5f5f5; border-radius:50%;' set:html={item.icon}></span>
                                    {item.label}: <span style='font-weight:700; margin-left:0.3rem;'>{valorDisplay}</span>
                                </div>
                            );
                        })}
                    </div>
                    <div class="ver-mas-container">
                        <button class="ver-mas-btn" id="ver-mas-mobile" style="display: none;">
                            <span>Ver más características</span>
                            <svg width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                                <polyline points="6,9 12,15 18,9"></polyline>
                            </svg>
                        </button>
                    </div>
                </div>
            </div>

            <aside class="detalle-sidebar" style="flex:1; min-width:320px; max-width:400px; display:flex; flex-direction:column; gap:2.5rem; margin-top:0;">
                <div class="info-box" style="background:var(--color-background); border:1px solid var(--color-text-primary); border-radius:14px; box-shadow:0 2px 8px var(--color-shadow); padding:2rem; display:flex; flex-direction:column; gap:1.5rem; height:470px; margin-top:0;">
                    {Tipo && Objetivo && <div class="property-type" style="font-size:0.9rem; color:var(--color-text-secondary); font-weight:500; margin:0; text-transform:capitalize;">{Tipo} en {Objetivo}</div>}
                    <h1 class="property-main-title" style="font-size:1.6rem; margin:0; line-height:1.2; color:var(--color-text-primary);">{Titulo}</h1>
                    {Ubicacion && <div class="property-location" style="font-size:1rem; color:var(--color-text-secondary); margin:0;">📍 {Ubicacion}</div>}
                    {Precio && (
                        <div class="property-price" style="margin:0.5rem 0;">
                            <div class="price-uf" style="font-size:2rem; font-weight:700; color:var(--color-primary-accent); margin:0;">{precioUF}</div>
                            {precioCLP && <div class="price-clp" style="font-size:1.1rem; color:var(--color-text-secondary); margin-top:0.2rem;">{precioCLP}</div>}
                        </div>
                    )}
                    <div class="property-key-features" style="display:grid; grid-template-columns:1fr 1fr; gap:1rem; margin-top:0.5rem;">
                        {Dormitorios && <span class="feature-item" style="display:flex; align-items:center; gap:0.5rem; font-size:0.95rem; color:var(--color-text-primary); font-weight:500;">
                          <img src="/assets/icons/bed.svg" alt="Dormitorios" style="width:16px; height:16px;">
                          {Dormitorios}
                        </span>}
                        {Banos && <span class="feature-item" style="display:flex; align-items:center; gap:0.5rem; font-size:0.95rem; color:var(--color-text-primary); font-weight:500;">
                          <img src="/assets/icons/shower.svg" alt="Baños" style="width:16px; height:16px;">
                          {Banos}
                        </span>}
                        {Superficie && <span class="feature-item" style="display:flex; align-items:center; gap:0.5rem; font-size:0.95rem; color:var(--color-text-primary); font-weight:500; grid-column:1/-1;">
                          <img src="/assets/icons/mt2.svg" alt="Metros cuadrados" style="width:16px; height:16px;">
                          {Superficie} m² totales
                        </span>}
                        {M2utiles && <span class="feature-item" style="display:flex; align-items:center; gap:0.5rem; font-size:0.95rem; color:var(--color-text-primary); font-weight:500; grid-column:1/-1;">
                          <img src="/assets/icons/utiles.svg" alt="Metros cuadrados útiles" style="width:16px; height:16px;">
                          {M2utiles} m² útiles
                        </span>}
                    </div>
                </div>
            </aside>
        </div>
      
        <div class="ficha-caracteristicas-desktop" style="margin-top:2.5rem;">
            <div class="technical-specs-section ficha-desktop" style="display:block;">
                <h2 class="section-title">Características</h2>
                <div class="specs-list" style="width:100%; display:grid; grid-template-columns:repeat(4, 1fr); gap:0.7rem 2.5rem; margin-bottom:0.5rem;">
                    {todasLasEspecificaciones.map((item, index) => {
                        const valor = propiedad[item.key];
                         if (!valor && !(valor === true || valor === 'Sí') && item.type !== 'currency') return null;
                        let valorDisplay = '';
                        if (item.type === 'spec' && valor) { valorDisplay = `${valor}${item.unit || ''}`; }
                        else if (item.type === 'feature' && (valor === true || valor === 'Sí')) { valorDisplay = 'Sí'; }
                        else if (item.type === 'currency' && valor) { valorDisplay = formatearPrecioCLP(valor).replace('CLP ', ''); }
                        else { return null; }
                        return (
                            <div class="spec-row" style="display:flex; align-items:center; gap:0.7rem; font-size:1.08rem; color:var(--color-text-primary);" data-index={index}>
                                <span style='display:inline-flex; align-items:center; justify-content:center; width:32px; height:32px; background:#f5f5f5; border-radius:50%;' set:html={item.icon}></span>
                                {item.label}: <span style='font-weight:700; margin-left:0.3rem;'>{valorDisplay}</span>
                            </div>
                        );
                    })}
                </div>
                <div class="ver-mas-container">
                    <button class="ver-mas-btn" id="ver-mas-desktop" style="display: none;">
                        <span>Ver más características</span>
                        <svg width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                            <polyline points="6,9 12,15 18,9"></polyline>
                        </svg>
                    </button>
                </div>
            </div>
        </div>

        <div class="detalle-inferior" style="margin-top:3rem;">
            {Descripcion && (
                <div class="description-section">
                    <h2 class="section-title">Descripción</h2>
                    <div class="description-content-wrapper" id="description-wrapper">
                        <div class="description-content" id="description-text" set:html={Descripcion}></div>
                        <div class="description-fade"></div>
                    </div>
                    <div class="ver-mas-container" style="text-align: center; margin-top: 1.5rem;">
                        <button class="ver-mas-btn" id="leer-mas-btn" style="display: none;">
                            <span>Leer más</span>
                            <svg width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                                <polyline points="6,9 12,15 18,9"></polyline>
                            </svg>
                        </button>
                    </div>
                </div>
            )}
            
            {(Region || Ubicacion) && (
                <div class="location-section" style="margin-top:3rem;">
                    <h2 class="section-title">Ubicación</h2>
                    <div class="location-info">
                        {Region && <div class="location-region">{Region}</div>}
                        {Ubicacion && <div class="location-area">{Ubicacion}</div>}
                    </div>
                    <div class="location-map">
                        <iframe src={`https://maps.google.com/maps?q=${encodeURIComponent(Ubicacion || Region)}&z=13&output=embed`} width="100%" height="300" style="border:0; border-radius:12px;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>
                    </div>
                </div>
            )}

            <div class="contact-section">
                <CTABanner
                    title="¿Te interesa esta propiedad?"
                    subtitle="Contáctanos directamente y recibe información detallada, visitas personalizadas y asesoría especializada"
                    ctaText="Contactar por esta propiedad"
                    ctaHref={whatsappLink}
                    variant="elegant"
                    ctaVariant="outline"
                    ctaSize="large"
                    iconSvg='<svg width="20" height="20" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"/></svg>'
                />
            </div>
        </div>

        {propiedadesSimilares.length > 0 && (
             <div id="bottom-destacadas" style="margin-top: 3rem;">
                <div class="destacadas-section">
                    <hr style="border:none; border-top:1.5px solid var(--color-border); margin:2.2rem 0 1.5rem 0;"/>
                    <div class="section-title" style="font-size:1.3rem; text-align:left; margin-bottom:1rem; color:var(--color-primary-accent); border:none; padding:0;">Propiedades Similares</div>
                    <div class="destacadas-list" style="display:flex; flex-direction:row; gap:1.5rem; overflow-x: auto; padding-bottom: 1rem;">
                       {propiedadesSimilares.map(prop => (
                            <a href={`/propiedades/${prop.Slug}`} class="destacada-card" style="flex: 0 0 300px; background:var(--color-background); border-radius:14px; box-shadow:0 2px 8px var(--color-shadow); text-decoration:none; color:inherit; overflow:hidden; border:1px solid var(--color-border);">
                                <div style="width:100%; aspect-ratio:1/1; background:#f5f5f5; display:flex; align-items:center; justify-content:center;">
                                    <img src={getPrimeraImagen(prop)} alt={prop.Titulo} style="width:100%; height:100%; object-fit:cover; display:block;"/>
                                </div>
                                <div style="padding:1.1rem 1rem 1rem 1rem; display:flex; flex-direction:column; gap:0.3rem; align-items:flex-start;">
                                    <div style="font-family:var(--font-primary); font-weight:600; font-size:1.08rem; color:var(--color-text-primary); margin-bottom:0.2rem; line-height:1.2;">{prop.Titulo}</div>
                                    <div style="font-size:1rem; color:var(--color-primary-accent); font-weight:600;">{formatearPrecio(prop.Precio)}</div>
                                    <div style="font-size:0.95rem; color:var(--color-text-secondary);">{prop.Ubicacion || ''}</div>
                                    {prop.Destacado && <span style="color:var(--color-primary-accent); font-size:0.85rem; font-weight:700;">★ Destacada</span>}
                                </div>
                            </a>
                        ))}
                    </div>
                </div>
             </div>
        )}
    </section>
  </main>
</Layout>

<script define:vars={{ imagenes }}>
    document.addEventListener('DOMContentLoaded', () => {
        // Lógica de Responsividad para Ficha Técnica y Sidebar
        function ajustarFichaTecnicaYCaracteristicas() {
            const fichaDesktop = document.querySelector('.ficha-desktop');
            const fichaMobile = document.querySelector('.ficha-mobile');
            const infoBoxDesktop = document.querySelector('.detalle-sidebar .info-box');
            const infoBoxMobile = document.querySelector('.info-box-mobile');
            
            if (window.innerWidth >= 1024) {
                if (fichaDesktop) fichaDesktop.style.display = 'block';
                if (fichaMobile) fichaMobile.style.display = 'none';
                if (infoBoxDesktop) infoBoxDesktop.style.display = 'flex';
                if (infoBoxMobile) infoBoxMobile.style.display = 'none';
            } else {
                if (fichaDesktop) fichaDesktop.style.display = 'none';
                if (fichaMobile) fichaMobile.style.display = 'block';
                if (infoBoxDesktop) infoBoxDesktop.style.display = 'none';
                if (infoBoxMobile) infoBoxMobile.style.display = 'flex';
            }
        }
        ajustarFichaTecnicaYCaracteristicas();
        window.addEventListener('resize', ajustarFichaTecnicaYCaracteristicas);

        // Funcionalidad de "Ver más/Ver menos" para características
        function inicializarVerMas() {
            const specsListDesktop = document.querySelector('.specs-list');
            const specsListMobile = document.querySelector('.specs-list-mobile');
            const btnDesktop = document.getElementById('ver-mas-desktop');
            const btnMobile = document.getElementById('ver-mas-mobile');
            
            // Función para configurar límites y mostrar botón
            function configurarVerMas(lista, boton, limite) {
                if (!lista || !boton) return;
                
                const caracteristicas = Array.from(lista.querySelectorAll('.spec-row, .spec-row-mobile')).filter(el => {
                    const valor = el.querySelector('span:last-child');
                    return valor && valor.textContent.trim() !== '';
                });
                
                if (caracteristicas.length > limite) {
                    boton.style.display = 'inline-flex';
                    
                    // Ocultar características que exceden el límite
                    caracteristicas.forEach((caract, index) => {
                        if (index >= limite) {
                            caract.style.display = 'none';
                        } else {
                            caract.style.display = 'flex';
                        }
                    });
                    
                    // Configurar evento click
                    boton.onclick = function() {
                        const estaExpandido = lista.classList.contains('expandido');
                        
                        if (estaExpandido) {
                            // Contraer
                            lista.classList.remove('expandido');
                            this.innerHTML = '<span>Ver más características</span><svg width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><polyline points="6,9 12,15 18,9"></polyline></svg>';
                            this.classList.remove('activo');
                            
                            // Ocultar características excedentes
                            caracteristicas.forEach((caract, index) => {
                                if (index >= limite) {
                                    caract.style.display = 'none';
                                }
                            });
                            this.blur(); // <-- Agregado para quitar el foco
                        } else {
                            // Expandir
                            lista.classList.add('expandido');
                            this.innerHTML = '<span>Ver menos características</span><svg width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><polyline points="6,9 12,15 18,9"></polyline></svg>';
                            this.classList.add('activo');
                            
                            // Mostrar todas las características
                            caracteristicas.forEach(caract => {
                                caract.style.display = 'flex';
                            });
                            this.blur(); // <-- Agregado para quitar el foco
                        }
                    };
                } else {
                    boton.style.display = 'none';
                }
            }
            
            // Configurar para desktop (8 características = 2 filas de 4)
            configurarVerMas(specsListDesktop, btnDesktop, 8);
            
            // Configurar para móvil (6 características)
            configurarVerMas(specsListMobile, btnMobile, 6);
        }
        
        // Inicializar después de que el DOM esté listo
        setTimeout(inicializarVerMas, 100);

        // Funcionalidad para "Leer más" en la descripción
        function inicializarLeerMas() {
            const wrapper = document.getElementById('description-wrapper');
            const content = document.getElementById('description-text');
            const btn = document.getElementById('leer-mas-btn');

            if (!wrapper || !content || !btn) return;

            // Usamos un pequeño timeout para asegurar que el CSS ha sido aplicado
            setTimeout(() => {
                const contentHeight = content.scrollHeight;
                const wrapperHeight = wrapper.clientHeight;

                if (contentHeight > wrapperHeight) {
                    btn.style.display = 'inline-flex'; // Mostrar el botón
                } else {
                    wrapper.style.maxHeight = 'none'; // El contenido cabe, así que quitamos la restricción
                    wrapper.querySelector('.description-fade').style.display = 'none'; // Ocultar el degradado
                }
            }, 100);

            btn.addEventListener('click', () => {
                wrapper.classList.toggle('expanded');
                const isExpanded = wrapper.classList.contains('expanded');
                btn.querySelector('span').textContent = isExpanded ? 'Leer menos' : 'Leer más';
                btn.blur();
            });
        }

        setTimeout(inicializarLeerMas, 100);

        // Lógica de la Galería
        if (imagenes && imagenes.length > 1) {
            let current = 0;
            const mainImg = document.getElementById('main-image');
            const thumbs = document.querySelectorAll('.gallery-thumbnails .thumbnail');
            const leftArrow = document.querySelector('.gallery-main .carousel-arrow.prev');
            const rightArrow = document.querySelector('.gallery-main .carousel-arrow.next');
            const lightbox = document.getElementById('lightbox-modal');
            const lightboxImg = document.getElementById('lightbox-img');
            const closeLightbox = document.querySelector('.lightbox-close');

            if (!mainImg || !thumbs.length) return;

            function showImage(idx) {
                current = idx;
                if (mainImg) mainImg.src = imagenes[current];
                thumbs.forEach((t, i) => {
                    t.classList.toggle('active', i === current);
                });
            }

            if (leftArrow) {
                leftArrow.addEventListener('click', () => {
                    showImage((current - 1 + imagenes.length) % imagenes.length);
                });
            }

            if (rightArrow) {
                rightArrow.addEventListener('click', () => {
                    showImage((current + 1) % imagenes.length);
                });
            }

            thumbs.forEach(thumb => {
                thumb.addEventListener('click', (e) => showImage(parseInt(e.target.dataset.index)));
            });

            // Lightbox
            if (lightbox && lightboxImg && closeLightbox) {
                mainImg.addEventListener('click', () => {
                    lightbox.style.display = 'flex';
                    lightboxImg.src = imagenes[current];
                });

                closeLightbox.addEventListener('click', () => {
                    lightbox.style.display = 'none';
                    lightboxImg.src = '';
                });

                lightbox.addEventListener('click', (e) => {
                    if (e.target === lightbox) {
                        lightbox.style.display = 'none';
                        lightboxImg.src = '';
                    }
                });
            }
            
            showImage(0);
        }
    });
</script>
<style>
  /* --- Galería de Miniaturas (Thumbnails) --- */
  .gallery-thumbnails {
    display: flex;
    gap: 0.5rem;
    margin-top: 1rem;
    
    /* COMPORTAMIENTO PARA MOBILE (con barra de scroll) */
    overflow-x: auto;          /* Habilita la barra de scroll horizontal */
    flex-wrap: nowrap;         /* Mantiene las imágenes en una sola línea */
    justify-content: center;    /* Las centra cuando no hay scroll */
    padding-bottom: 8px;       /* Espacio para que la barra de scroll no se pegue al borde */
    
    /* Scroll más suave en iOS */
    -webkit-overflow-scrolling: touch; 
    
    /* Estilo de la barra de scroll (visible) */
    scrollbar-width: thin; /* Para Firefox */
    scrollbar-color: #ccc #f1f1f1; /* Color de la barra y del fondo */
  }

  /* Estilo de la barra de scroll para Chrome, Safari y Edge */
  .gallery-thumbnails::-webkit-scrollbar {
    height: 6px; /* Altura de la barra */
  }

  .gallery-thumbnails::-webkit-scrollbar-track {
    background: #f1f1f1; /* Color del riel */
    border-radius: 10px;
  }

  .gallery-thumbnails::-webkit-scrollbar-thumb {
    background: #ccc; /* Color de la barra de desplazamiento */
    border-radius: 10px;
  }

  .gallery-thumbnails::-webkit-scrollbar-thumb:hover {
    background: #aaa; /* Color al pasar el mouse */
  }

  /* Estilos de cada imagen miniatura */
  .thumbnail {
    width: 80px;
    height: 80px;
    aspect-ratio: 1 / 1;
    object-fit: cover;
    border-radius: 8px;
    cursor: pointer;
    flex-shrink: 0; /* Impide que las imágenes se encojan */
    border: 3px solid transparent;
    transition: border-color 0.2s;
  }
  
  /* Estilo para la imagen activa */
  .thumbnail.active {
     border-color: var(--color-primary-accent, #007bff); /* Usa una variable de tu proyecto o un color por defecto */
  }

  /* --- COMPORTAMIENTO PARA DESKTOP --- */
  /* Cuando la pantalla sea de 1024px o más ancha... */
  @media (min-width: 1024px) {
    .gallery-thumbnails {
      justify-content: center; /* Centra las imágenes cuando no hay scroll */
      flex-wrap: nowrap;         /* Mantiene las imágenes en una sola línea horizontal */
      overflow-x: auto;          /* Mantiene el scroll horizontal en desktop */
      padding-bottom: 8px;       /* Mantiene el espacio para la barra de scroll */
    }
    
    /* Asegurar que el recuadro de información tenga exactamente la misma altura que la foto principal */
    .detalle-sidebar .info-box {
      height: 470px !important;
      display: flex !important;
      flex-direction: column !important;
      align-items: flex-start !important;
    }
  }

  /* --- AJUSTE PARA DESCRIPCIÓN EN MOBILE --- */
  @media (max-width: 1023px) {
    .description-content {
      padding-left: 1rem;
      padding-right: 1rem;
    }
  }

  /* --- Funcionalidad Leer Más para Descripción --- */
  .description-content-wrapper {
    position: relative;
    max-height: 10rem; /* Aprox. 5 líneas en móvil */
    overflow: hidden;
    transition: max-height 0.5s ease-in-out;
  }

  .description-content-wrapper.expanded {
    max-height: 1000px; /* Un valor suficientemente grande */
  }

  .description-fade {
    display: block;
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 3rem;
    background: linear-gradient(to bottom, transparent, var(--color-background));
    pointer-events: none;
    transition: opacity 0.3s;
    opacity: 1;
  }

  .description-content-wrapper.expanded .description-fade {
    opacity: 0;
  }

  #leer-mas-btn svg {
    transition: transform 0.3s;
  }

  .description-content-wrapper.expanded + .ver-mas-container #leer-mas-btn svg {
    transform: rotate(180deg);
  }

  /* --- Media Query para Desktop --- */
  @media (min-width: 1024px) {
    .description-content-wrapper {
      max-height: 9.6rem; /* Aprox. 4 líneas en desktop */
    }
    .description-content-wrapper.expanded {
      max-height: 1000px;
    }
  }
</style>